name: 'Module - cache (Windows)'

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: 'Build Module cache Service for Windows'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Ensure GitHub NuGet Source
        run: |
          dotnet nuget add source -u ${{ secrets.GH_ACTION_USER }} -p ${{ secrets.GH_ACTION_TOKEN }} --store-password-in-clear-text --name github ${{ secrets.AWDEV_NUGET_URL }}
      - name: Create npmrc
        run: |
          echo "${{ secrets.NPMRC_CONFIG }}" > .npmrc
      - name: Restore dependencies
        run: dotnet restore src/service-v2-dotnet/service/io2-module-template-service.csproj
      - name: Build
        run: dotnet build src/service-v2-dotnet/service/io2-module-template-service.csproj --configuration Release --force
      - name: Publish
        run: |
          dotnet publish src/service-v2-dotnet/service/io2-module-template-service.csproj -c Release -r win-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesInSingleFile=true -p:IncludeAllContentForSelfExtract=true -p:EnableCompressionInSingleFile=true --self-contained true -o out --force
        env:
          npm_config_userconfig: '${{ github.workspace }}/.npmrc'
          npm_config_globalconfig: '${{ github.workspace }}/.npmrc'
          NODE_AUTH_TOKEN: ${{ secrets.AWDEV_NPM_PACKAGE_TOKEN }}
      - name: 'Create module definition file'
        uses: vimtor/action-zip@v1
        with:
          dest: template.zip
          files: './module-definition'
          recursive: true
      - name: Get module version
        id: module-version
        uses: actiwaredevelopment/action-io-get-module-version@v0.1
        with:
          module-definition-file: './module-definition/info.json'
      - name: 'Create version information'
        uses: finnp/create-file-action@master
        env:
          FILE_NAME: './version.txt'
          FILE_DATA: '${{ steps.module-version.outputs.version }}-developer'
      - name: 'Upload the Publish Artifact'
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ServiceForWindows
          path: |
            ./version.txt
            ./out
            ./src/configuration/build
            ${{ github.workspace }}/template.zip
            ./module-definition/info.json

  ftp-deployment:
    name: 'Deploy Service via FTP'
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: 'Download Artifact'
        uses: actions/download-artifact@v2.0.8
        with: 
          name: ServiceForWindows
      - name: FTP Deployment
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          localDir: ./
          remoteDir: /Development/actiwareio/Source/Modules/v2/cache/
          # Deployment destination server & path. Formatted as protocol://domain.com:port/full/destination/path/
          host: ${{ secrets.SFTP_HOST }}:522
          # FTP account username
          user: ${{ secrets.SFTP_USER }}
          # FTP account password
          password: ${{ secrets.SFTP_PASSWORD }}
