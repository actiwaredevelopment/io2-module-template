name: 'Module - cache (Developer)'

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:
    inputs:
      releaseversion:
        description: 'Enter a release version'
        required: false
        default: '2.0.0'

jobs:
  build-container:
    name: 'Build Module cache Service for Linux'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Ensure GitHub NuGet Source
        run: |
          dotnet nuget add source -u ${{ secrets.GH_ACTION_USER }} -p ${{ secrets.GH_ACTION_TOKEN }} --store-password-in-clear-text --name github ${{ secrets.AWDEV_NUGET_URL }}
      - name: Create npmrc
        run: |
          echo "${{ secrets.NPMRC_CONFIG }}" > .npmrc
      - name: Restore dependencies
        run: dotnet restore src/service-v2-dotnet/service/io2-module-template-service.csproj
      - name: Build
        run: dotnet build src/service-v2-dotnet/service/io2-module-template-service.csproj --configuration Release --force
      - name: Publish
        run: |
          dotnet publish src/service-v2-dotnet/service/io2-module-template-service.csproj -c Release -o out --force
        env:
          npm_config_userconfig: '${{ github.workspace }}/.npmrc'
          npm_config_globalconfig: '${{ github.workspace }}/.npmrc'
          NODE_AUTH_TOKEN: ${{ secrets.AWDEV_NPM_PACKAGE_TOKEN }}
      - name: 'Create module definition file'
        uses: vimtor/action-zip@v1
        with:
          dest: template.zip
          files: './module-definition'
          recursive: true
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: 'yyyy.MM.DD'
      - name: 'Create version information'
        uses: finnp/create-file-action@master
        env:
          FILE_NAME: './version.txt'
          FILE_DATA: '${{ steps.current-time.outputs.formattedTime }}-developer'
      - name: 'Upload the Publish Artifact'
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ServiceForLinux
          path: |
            ./version.txt
            ./out
            ./src/configuration/build
            ${{ github.workspace }}/template.zip
            ./module-definition/info.json
            ./.github/docker/dockerfile-github

  docker:
    name: 'Create and Publish Docker-Image'
    needs: [build-container]
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Download Artifact'
        uses: actions/download-artifact@v2.0.8
        with: 
          name: ServiceForLinux
      - name: 'Build and Publish Docker Image'
        uses: matootie/github-docker@v3.1.0
        with:
          # GitHub Repository Token to log in using.
          accessToken: ${{ secrets.GITHUB_TOKEN }}
          # The desired name for the image. Defaults to current repository name.
          imageName: io2-module-template
          # The desired tag for the image. Defaults to latest. Optionally accepts multiple tags separated by newline.
          tag: developer
          # Where should GitHub Docker find the Dockerfile, relative to the root of the repository.
          # context: 
          # What Dockerfile should GitHub Docker be using when building. Defaults to traditional Dockerfile name.
          contextName: .github/docker/dockerfile-github