name: 'Pre-Release Build (Auto)'

on:
    push:
        tags:
            - 'prerelease-*'

jobs:
    build-linux:
        uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/build-dotnet-io-module.yml@main
        with:
            artifact-name: BuildOutputLinux
            version-postfix: '-pre-release'
            repository: ${{ github.repository }}
            branch: tags/${{ github.ref_name }}
            dotnet-version: 6.0.x
            project: src/service-v2-dotnet/service/io2-module-iotemplate-service.csproj
            modulefile: iotemplate.zip
            dockerfile: ./.github/docker/dockerfile
            ui-build-path: ./src/configuration/build
            rid: 'linux-x64'
            create-single-file: false
        secrets:
            action-user: ${{ secrets.GH_ACTION_USER }}
            action-token: ${{ secrets.GH_ACTION_TOKEN }}
            awdev-nuget-source: ${{ secrets.AWDEV_NUGET_URL }}
            npm-package-token: ${{ secrets.AWDEV_NPM_PACKAGE_TOKEN }}
            npmrc-config: ${{ secrets.NPMRC_CONFIG }}

    build-windows:
        uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/build-dotnet-io-module.yml@main
        with:
            artifact-name: BuildOutputWindows
            version-postfix: '-pre-release'
            repository: ${{ github.repository }}
            branch: tags/${{ github.ref_name }}
            dotnet-version: 6.0.x
            project: src/service-v2-dotnet/service/io2-module-iotemplate-service.csproj
            modulefile: iotemplate.zip
            dockerfile: ./.github/docker/dockerfile
            ui-build-path: ./src/configuration/build
            rid: 'win-x64'
            create-single-file: true
        secrets:
            action-user: ${{ secrets.GH_ACTION_USER }}
            action-token: ${{ secrets.GH_ACTION_TOKEN }}
            awdev-nuget-source: ${{ secrets.AWDEV_NUGET_URL }}
            npm-package-token: ${{ secrets.AWDEV_NPM_PACKAGE_TOKEN }}
            npmrc-config: ${{ secrets.NPMRC_CONFIG }}

    docker:
        needs: build-linux

        uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/publish-to-docker.yml@main
        with:
            artifact: ${{ needs.build-linux.outputs.download }}
            image-name: actiwareio/io-module-iotemplate
            image-tag: ${{ github.ref_name }}
        secrets:
            docker-username: ${{ secrets.DOCKER_HUB_USER }}
            docker-password: ${{ secrets.DOCKER_HUB_SECRET }}

    ftp:
        needs: build-windows

        uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/publish-to-ftp.yml@main
        with:
            artifact: ${{ needs.build-windows.outputs.download }}
            remote-dir: /Development/actiwareio/Source/Modules/v2/IOTemplate/
        secrets:
            address: ${{ secrets.SFTP_HOST }}:522
            user: ${{ secrets.SFTP_USER }}
            password: ${{ secrets.SFTP_PASSWORD }}
