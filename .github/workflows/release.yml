name: 'Release Build (Auto)'

on:
  push:
    tags:
      - 'release-*'

jobs:
  build-linux:
    uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/build-dotnet-io-module.yml@main
    with:
      artifact-name: BuildOutputLinux
      repository: ${{ github.repository }}
      branch: tags/${{ github.ref_name }}
      dotnet-version: 6.0.x
      project: src/service-v2-dotnet/service/io2-module-template-service.csproj
      modulefile: template.zip
      dockerfile: ./.github/docker/dockerfile
      ui-build-path: ./src/configuration/build
      rid: 'linux-x64'
      create-single-file: false
    secrets:
      action-user: ${{ secrets.GH_ACTION_USER }}
      action-token: ${{ secrets.GH_ACTION_TOKEN }}
      awdev-nuget-source: ${{ secrets.AWDEV_NUGET_URL }}
      npm-package-token: ${{ secrets.AWDEV_NPM_PACKAGE_TOKEN }}
      npmrc-config: ${{ secrets.NPMRC_CONFIG }}

  build-windows:
    uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/build-dotnet-io-module.yml@main
    with:
      artifact-name: BuildOutputWindows
      repository: ${{ github.repository }}
      branch: tags/${{ github.ref_name }}
      dotnet-version: 6.0.x
      project: src/service-v2-dotnet/service/io2-module-template-service.csproj
      modulefile: template.zip
      dockerfile: ./.github/docker/dockerfile
      ui-build-path: ./src/configuration/build
      rid: 'win-x64'
      create-single-file: true
    secrets:
      action-user: ${{ secrets.GH_ACTION_USER }}
      action-token: ${{ secrets.GH_ACTION_TOKEN }}
      awdev-nuget-source: ${{ secrets.AWDEV_NUGET_URL }}
      npm-package-token: ${{ secrets.AWDEV_NPM_PACKAGE_TOKEN }}
      npmrc-config: ${{ secrets.NPMRC_CONFIG }}

  docker-latest:
    needs: build-linux

    uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/publish-to-docker.yml@main
    with:
      artifact: ${{ needs.build-linux.outputs.download }}
      image-name: actiwareio/io-module-template
      image-tag: 2-latest
    secrets:
      docker-username: ${{ secrets.DOCKER_HUB_USER }}
      docker-password: ${{ secrets.DOCKER_HUB_SECRET }}

  docker-release:
    needs: build-linux

    uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/publish-to-docker.yml@main
    with:
      artifact: ${{ needs.build-linux.outputs.download }}
      image-name: actiwareio/io-module-template
      image-tag: context.payload.ref.replace(/refs\/tags\/release-/gi, '')
    secrets:
      docker-username: ${{ secrets.DOCKER_HUB_USER }}
      docker-password: ${{ secrets.DOCKER_HUB_SECRET }}

  ftp:
    needs: build-windows

    uses: actiwaredevelopment/action-io-build-workflows/.github/workflows/publish-to-ftp.yml@main
    with:
      artifact: ${{ needs.build-windows.outputs.download }}
      remote-dir: /Development/actiwareio/Source/Modules/v2/Template/
    secrets:
      address: ${{ secrets.SFTP_HOST }}:522
      user: ${{ secrets.SFTP_USER }}
      password: ${{ secrets.SFTP_PASSWORD }}