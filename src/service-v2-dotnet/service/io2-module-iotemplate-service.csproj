<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <RootNamespace>Module.IOTemplate.Service</RootNamespace>
    <Product>ACTIWARE: IO</Product>
    <ProductName>Module: IOTemplate</ProductName>	
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
		<FileVersion>2.0.0.0</FileVersion>
		<ProductVersion>2.0.0</ProductVersion>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <OutputPath>..\..\..\build-service</OutputPath>
    <SpaRoot>..\..\configuration</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(RunConfiguration)' == 'Console' " />

  <PropertyGroup Condition=" '$(RunConfiguration)' == 'io2_module_iotemplate_service' " />
  <ItemGroup>
    <PackageReference Include="Development.SDK.Logging" Version="2.0.6" />
    <PackageReference Include="Development.SDK.Module" Version="2.0.68" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.0" />
		<PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="6.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
  </ItemGroup>

	<ItemGroup>
    <ProjectReference Include="..\api\info\io2-module-iotemplate-api-info.csproj" />
    <ProjectReference Include="..\api\processor\example\io2-module-iotemplate-api-processor-example.csproj" />
    <ProjectReference Include="..\shared\utils\io2-module-iotemplate-utils.csproj" />
	</ItemGroup>

  <!-- Don't publish the SPA source files, but do show them in the project files list -->
  <!-- <ItemGroup>
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup> -->

	<ItemGroup>
		<None Remove="..\..\configuration\yarn.lock" />
	</ItemGroup>

  <Target Name="ShowReservedProperties" AfterTargets="BeforeBuild">
      <Message Text=" MSBuildProjectDirectory  = $(MSBuildProjectDirectory)" Importance="high" />
      <Message Text=" MSBuildProjectFile  = $(MSBuildProjectFile)" Importance="high" />
      <Message Text=" MSBuildProjectExtension  = $(MSBuildProjectExtension)" Importance="high" />
      <Message Text=" MSBuildProjectFullPath  = $(MSBuildProjectFullPath)" Importance="high" />
      <Message Text=" MSBuildProjectName  = $(MSBuildProjectName)" Importance="high" />
      <Message Text=" MSBuildBinPath  = $(MSBuildBinPath)" Importance="high" />
      <Message Text=" MSBuildProjectDefaultTargets  = $(MSBuildProjectDefaultTargets)" Importance="high" />
      <Message Text=" MSBuildExtensionsPath  = $(MSBuildExtensionsPath)" Importance="high" />
      <Message Text=" MSBuildStartupDirectory  = $(MSBuildStartupDirectory)" Importance="high"/>
  </Target>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn postinstall" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn postinstall" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn build" />

    <!-- Include the newly-built files in the publish output -->
    <!-- <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup> -->
  </Target>
</Project>
